<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbSearch.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        uItc5P8CbUIQLMyX3y4AAAAASUVORK5CYII=
</value>
  </data>
</root>